# --------------
# Configuration
# --------------
import pandas as pd
from pathlib import Path

configfile: "config.yaml"

# Allow users to fix the underlying OS via singularity.
singularity: "docker://continuumio/miniconda3"

# Isolated conda environment to fix R package dependencies
conda: "envs/r.yaml"

# Rules
rule all:
    input:
        config["dir_results"] + "pheno_step1.tsv",
        config["dir_results"] + "pheno_step2.tsv"

rule pheno_step1:
    input:
        code_lists=expand(config["dir_codelist"] + "{pheno}.tsv",
                          pheno = [k for k,v in config["step1_pheno_data"].items()]),
        hesin_diag = config["dir_data"] + config["data_spec"]["hesin_diag"]["filename"],
        hesin_oper = config["dir_data"] + config["data_spec"]["hesin_oper"]["filename"],
        death_cause = config["dir_data"] + config["data_spec"]["death_cause"]["filename"]
    output:
        config["dir_results"] + "pheno_step1.tsv"
    script:
        "scripts/pheno_step1.R"

rule pheno_step2:
    input:
        pheno_step1=config["dir_results"] + "pheno_step1.tsv",
        lvef=config["dir_data"] + config["data_spec"]["lvef"]["filename"]
    output:
        config["dir_results"] + "pheno_step2.tsv"
    script:
        "scripts/pheno_step2.R"
